<!--{template common/header}-->
	<!--{subtemplate home/spacecp_header}-->
			<!--{hook/spacecp_avatar_top}-->
			<script type="text/javascript">
				function updateavatar() {
					window.location.href = document.location.href.replace('&reload=1', '') + '&reload=1';
				}
				<!--{if !$reload}-->
				saveUserdata('avatar_redirect', document.referrer);
				<!--{/if}-->
			</script>
			<form id="avatarform" enctype="multipart/form-data" method="post" autocomplete="off" action="home.php?mod=spacecp&ac=avatar&ref">
				<table cellspacing="0" cellpadding="0" class="tfm">
					<caption>
						<span id="retpre" class="y xi2"></span>
						<h2 class="xs2">{lang current_my_space}</h2>
						<p>{lang setting_avatar_message}</p>
					</caption>
					<tr>
						<td>
							<!--{avatar($space['uid'], 'big')}-->
						</td>
					</tr>
				</table>

				<table cellspacing="0" cellpadding="0" class="tfm">
					<caption>
						<h2 class="xs2">{lang setting_my_new_avatar}</h2>
						<p>{lang setting_my_new_avatar_message}</p>
					</caption>
					<tr>
                                               <td>
                                                        <!--{template home/spacecp_avatar_body}-->
                                               </td>
					</tr>
				</table>
				<input type="hidden" name="formhash" value="{FORMHASH}" />
			</form>
			<!--{hook/spacecp_avatar_bottom}-->
		</div>
	</div>
	<script type="text/javascript">
		var redirecturl = loadUserdata('avatar_redirect');
		if(redirecturl) {
			document.getElementById('retpre').innerHTML = '<a href="' + redirecturl + '">{lang previous_page}</a>';
		}
	</script>
	<script>
	'use strict';

const avatarform = document.querySelector("#avatarform");

let noGM_xmlhttpRequest = false;
//仿GM_xmlhttpRequest函数v1.4
if (typeof(GM_xmlhttpRequest) == 'undefined' || typeof(GM_info) == 'undefined')
{
	noGM_xmlhttpRequest = true;
	window.GM_xmlhttpRequest = function(GM_param) {
		const xhr = new XMLHttpRequest(); //创建XMLHttpRequest对象
		xhr.open(GM_param.method, GM_param.url, true);
		if (GM_param.responseType) xhr.responseType = GM_param.responseType;
		if (GM_param.overrideMimeType) xhr.overrideMimeType(GM_param.overrideMimeType);
		xhr.onreadystatechange = function(e) //设置回调函数
			{
				const _xhr = e.target;
				if (_xhr.readyState === _xhr.DONE) { //请求完成时
					if (_xhr.status === 200 && GM_param.onload) //正确加载时
					{
						GM_param.onload(_xhr);
					}
					if (_xhr.status !== 200 && GM_param.onerror) //发生错误时
					{
						GM_param.onerror(_xhr);
					}
				}
			};
		if (GM_param.onprogress)
			xhr.upload.onprogress = function(e){GM_param.onprogress(e.target)};
		//添加header
		for (let header in GM_param.headers) {
			xhr.setRequestHeader(header, GM_param.headers[header]);
		}
		//发送数据
		xhr.send(GM_param.data ? GM_param.data : null);
	};
}

const avatarsDefine = [
	{name:'大头像',code:'big',maxWidth:200,maxHeight:250,blob:null},
	{name:'中头像',code:'middle',maxWidth:120,maxHeight:120,blob:null},
	{name:'小头像',code:'small',maxWidth:48,maxHeight:48,blob:null},
];

const insertPlace = avatarform.parentNode;

// HTML5版本才会有的几个提交按钮
const ipt_avatarArr = [
	avatarform.querySelector('[name="avatar1"]'),
	avatarform.querySelector('[name="avatar2"]'),
	avatarform.querySelector('[name="avatar3"]'),
];
const ipt_Filedata = avatarform.querySelector('[name="Filedata"]');
const ipt_confirm = avatarform.querySelector('[name="confirm"]');
const maxSize = parseInt(new URL(data[data.indexOf('src')+1]).searchParams.get('uploadSize') || 2048, 10) * 1024;


const styleCss = `.discuz-avatar{
	border: 1px solid #ccc;
	padding: 5px 15px;
	width:auto;
	display:inline-block;
	width: 450px;
	box-sizing: border-box;
}
.pic-type-div{
	display:inline-block;
	vertical-align:top;
	margin-right: 15px;
}
.pic-type-div:last-of-type{
	margin-right: unset;
}
.pic-div{
	border: 1px solid #ccc;
	cursor: pointer;
	position: relative;
	display: table-cell;
	text-align:center;
	vertical-align: middle;
	background: #fff;
	background-image: 
		linear-gradient(45deg, #eee 25%, transparent 26%, transparent 74%, #eee 75%),
		linear-gradient(45deg, #eee 25%, transparent 26%, transparent 74%, #eee 75%);
	background-position: 0 0, 10px 10px;
	background-size: 20px 20px;
}
.pic-type-big .pic-div{
	width: 200px;
	height: 250px;
}
.pic-type-big .pic-img{
	max-width: 200px;
	max-height: 250px;
}
.pic-type-middle .pic-div{
	width: 120px;
	height: 120px;
}
.pic-type-middle .pic-img{
	max-width: 120px;
	max-height: 120px;
}
.pic-type-small .pic-div{
	width: 48px;
	height: 48px;
}
.pic-type-small .pic-img{
	max-width: 48px;
	max-height: 48px;
}

.choose-file{
	display: none;
}
.pic-div.nopic::before{
	content:"➕";
	font-size: 2em;
}
.pic-tag{
	text-align:center;
}
.submit-bar{
	text-align:center;
}

const fragment = document.createDocumentFragment();

const ctlDiv = fragment.appendChild(document.createElement('div'));
ctlDiv.className = 'discuz-avatar';
const style = ctlDiv.appendChild(document.createElement('style'));
style.type = 'text/css';
style.innerHTML = styleCss;
const caption = ctlDiv.appendChild(document.createElement('p'));
caption.appendChild(document.createTextNode('若上传动画(APNG)，以上工具无法裁剪动画，需自行裁剪，上传三种尺寸的头像到下面：'));
caption.appendChild(document.createElement('br'));
const picTable = ctlDiv.appendChild(document.createElement('div'));
const picImgs = [];
avatarsDefine.forEach((obj,idx)=>{
	const picTypeDiv = picTable.appendChild(document.createElement('div'));
	picTypeDiv.className = 'pic-type-div pic-type-' + obj.code;
	const picDiv = picTypeDiv.appendChild(document.createElement('div'));
	picDiv.className = 'pic-div nopic';

	const pic = new Image();
	picDiv.appendChild(pic);
	pic.className = 'pic-img img-' + obj.code;
	pic.onload = function(){
		if (this.naturalWidth > obj.maxWidth)
		{
			progressDiv.appendChild(document.createElement('br'));
			progressDiv.appendChild(document.createTextNode(obj.name+'宽度大于 '+obj.maxWidth+'px，可能可能上传失败！'));
		}
		if (this.naturalHeight > obj.maxHeight)
		{
			progressDiv.appendChild(document.createElement('br'));
			progressDiv.appendChild(document.createTextNode(obj.name+'高度大于 '+obj.maxHeight+'px，可能可能上传失败！'));
		}
	}
	picImgs.push(pic);

	const file = picDiv.appendChild(document.createElement('input'));
	file.type = "file";
	file.className = "choose-file";
	picDiv.onclick = function(){
		file.click();
	}

	file.onchange = function(e){
		const file = e.target.files[0];
		const imageType = /image\/.*/i;
		progressDiv.textContent = '';
		if (!imageType.test(file.type)) {
			progressDiv.textContent = file.name+' 不是有效的图像文件！';
			pic.src = '';
			picDiv.classList.add('nopic');
			return;
		}
		if (file.size > maxSize) {
			progressDiv.textContent = obj.name+' '+file.name+' 文件大小超出 '+maxSize/1048576+'MiB，可能上传失败！';
		}
		picDiv.classList.remove('nopic');
		if (pic.src.length>0)
			URL.revokeObjectURL(pic.src);
		pic.src = URL.createObjectURL(file);
		obj.blob = file;
	}

	const tagDiv = picTypeDiv.appendChild(document.createElement('div'));
	tagDiv.className = 'pic-tag';
	const span1 = tagDiv.appendChild(document.createElement('span'));
	span1.appendChild(document.createTextNode(obj.name));
	tagDiv.appendChild(document.createElement('br'));
	const span2 = tagDiv.appendChild(document.createElement('span'));
	span2.appendChild(document.createTextNode(obj.maxWidth+'×'+obj.maxHeight));

});

const statusDiv = ctlDiv.appendChild(document.createElement('div'));
statusDiv.className = 'status-bar';
const progressDiv = ctlDiv.appendChild(document.createElement('div'));
progressDiv.className = 'progress-bar';
const submitDiv = ctlDiv.appendChild(document.createElement('div'));
submitDiv.className = 'submit-bar';
const submit = submitDiv.appendChild(document.createElement('button'));
submit.className = 'submit-btn';
submit.innerHTML = '📤提交';
submit.onclick = function(){
	if (!avatarsDefine.every(obj=>obj.blob))
	{
		progressDiv.textContent = '还未添加 '+avatarsDefine.filter(obj=>!obj.blob).map(obj=>obj.name).join('、')+' 图像';
		return;
	}
	submit.disabled = true;

	const fileDataArr = [];
	function readBlobs(blobArr,type,callback)
	{
		if (blobArr.length<1)
		{
			callback(fileDataArr);
			return;
		}
		const file = blobArr.shift();
		const fileReader = new FileReader();
		fileReader.onload = function (e) {
			fileDataArr.push(e.target.result);
			readBlobs(blobArr, type, callback);
		}
		if (type == 'base64')
			fileReader.readAsDataURL(file);
		else //if (type == 'arrayBuffer')
			fileReader.readAsArrayBuffer(file);
	}
	readBlobs(avatarsDefine.map(obj=>obj.blob), 'base64', sumbitAvatarsHTML5);
}
ctlDiv.appendChild(document.createElement('hr'));
const tipsDiv = ctlDiv.appendChild(document.createElement('div'));
tipsDiv.className = 'tips-bar';
let quote = null,code = null;
quote = tipsDiv.appendChild(document.createElement('div'));
quote.className = 'quote';
quote.appendChild(document.createTextNode('如果您的头像是动画，您需要自行裁剪，然后上传三种尺寸的头像到上面。推荐使用 '));
const a = quote.appendChild(document.createElement('a'))
a.href = 'https://ezgif.com/resize';
a.appendChild(document.createTextNode('https://ezgif.com/'));
quote.appendChild(a);

//将UI插入
insertPlace.appendChild(fragment);

//HTML5模式提交
function sumbitAvatarsHTML5(base64Arr)
{
	progressDiv.textContent = '已提交，HTML5 模式成功状态请直接参考上方编辑器';
	const dataArr = base64Arr.map(str=>str.substr(str.indexOf(",") + 1)); //拿到3个头像的Base64字符串
	dataArr.forEach((str,idx)=>{
		ipt_avatarArr[idx].value = str;
	});
	ipt_Filedata.value = '';
	ipt_confirm.value = '';

	avatarform.action = data[data.indexOf('stl_src')+1];
	avatarform.submit();
	submit.disabled = false;
}
	</script>
	<div class="appl">
		<!--{subtemplate home/spacecp_footer}-->
	</div>
</div>
<!--{template common/footer}-->
