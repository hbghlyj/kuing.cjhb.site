<style>
.chip {
display: inline-flex;
align-items: center;
background-color: #e0e0e0;
border-radius: 16px;
padding: 4px 8px;
margin: 4px;
}
.chip button {
background: none;
border: none;
cursor: pointer;
margin-left: 4px;
}
.chip button:hover {
color: red;
}
</style>
<div id="chip-container"></div>
<input name="tags" type="hidden" id="tags" value="<!--{echo $tags or $postinfo['tag']}-->">
<input id="keyword-input" size="30" placeholder="{lang input_a_new_tag_press_enter_submit}" list="tag-suggestions">
<datalist id="tag-suggestions"></datalist>
<script reload="1">
    $('keyword-input').addEventListener('input', async function() {
        const query = this.value.trim();
        if (mb_strlen(query) < 2) return; // Only fetch suggestions for queries longer than 1 character

        try {
            const response = await fetch(`forum.php?mod=tag&op=search&inajax=1&searchkey=${encodeURIComponent(query)}`);
            const suggestions = await response.json();

            $('tag-suggestions').innerHTML = ''; // Clear previous suggestions
            suggestions.forEach(tag => {
                const option = document.createElement('option');
                option.value = tag;
                $('tag-suggestions').appendChild(option);
            });
        } catch (error) {
            console.error('Error fetching tag suggestions:', error);
        }
    });
</script>
<script reload="1">
{
    const chipContainer = document.getElementById('chip-container');
    const keywords = $('tags').value ? $('tags').value.split(',') : [];

    function renderChips() {
        $('tags').value = keywords.join(',');
        chipContainer.innerHTML = '';
        keywords.forEach(keyword => {
            const chip = document.createElement('div');
            chip.className = 'chip';
            chip.textContent = keyword;

            const removeButton = document.createElement('button');
            removeButton.textContent = 'Ã—';
            removeButton.addEventListener('click', () => removeKeyword(keyword));

            chip.appendChild(removeButton);
            chipContainer.appendChild(chip);
        });
    }

    function addKeyword(value) {
        if (value.indexOf(',') !== -1 || value.indexOf('\\') !== -1) {
            showError('{lang tag_cannot_contain_comma_or_backslash}');
            return;
        }

        if(keywords.length >= 5) {
            showError('{lang tag_count_limit}');
            return;
        }

        const taglength = mb_strlen(value);

        if(taglength > 30 || taglength < 3) {
            showError('{lang tag_max_length_invalid}' + taglength);
            return;
        }

        if (value && !keywords.includes(value)) {
            keywords.push(value);
            renderChips();
        }
    }

    function removeKeyword(keyword) {
        const index = keywords.indexOf(keyword);
        if (index > -1) {
            keywords.splice(index, 1);
            renderChips();
        }
    }

    $('keyword-input').addEventListener('keydown', function(e) {
        if (e.key === 'Enter') {
            addKeyword(this.value.trim());
            this.value = '';
            doane(e);
        }
    });

    $('keyword-input').addEventListener('blur', function() {
        if (this.value.trim()) {
            addKeyword(this.value.trim());
            this.value = '';
        }
    });

    renderChips();
}
</script>